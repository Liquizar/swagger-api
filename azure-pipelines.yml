# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

# trigger:
# - main

# pool:
#   vmImage: ubuntu-latest
#   name: self-hosted

# strategy:
#   matrix:
#     Python36:
#       python.version: '3.11.8'

# steps:
# - script: |
#     if [ "$(python --version)" != "Python 3.11.8" ]; then
#       echo "Installing Python 3.11.8"
#       sudo apt-get update
#       sudo apt-get install -y python3.11.8
#     fi
#   displayName: 'Install Python 3.11.8'

# - task: UsePythonVersion@0
#   inputs:
#     versionSpec: '3.11.8'
#     addToPath: true
#   displayName: 'Use Python 3.11.8'

# - script: |
#     python -m pip install --upgrade pip
#     pip install -r requirements.txt
#   displayName: 'Install dependencies'

# - script: |
#     pip install pytest pytest-azurepipelines
#     pytest
#   displayName: 'pytest'

trigger:
- main

pool:
  vmImage: 'ubuntu-latest'
  name: self-hosted

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.x'
    addToPath: true

- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt
  displayName: 'Install dependencies'

- script: |
    pytest
  displayName: 'Run tests'

- script: |
    echo "##vso[task.setvariable variable=build.artifactstagingdirectory]$(System.DefaultWorkingDirectory)"
  displayName: 'Set artifact directory'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(build.artifactstagingdirectory)/task-api.zip'
  displayName: 'Archive files'

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(build.artifactstagingdirectory)'
    artifactName: 'task-api'
    publishLocation: 'Container'