# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

# first try 
#####################################################################
# trigger:
# - main

# pool:
#   vmImage: ubuntu-latest
#   name: self-hosted

# strategy:
#   matrix:
#     Python36:
#       python.version: '3.11.8'

# steps:
# - script: |
#     if [ "$(python --version)" != "Python 3.11.8" ]; then
#       echo "Installing Python 3.11.8"
#       sudo apt-get update
#       sudo apt-get install -y python3.11.8
#     fi
#   displayName: 'Install Python 3.11.8'

# - task: UsePythonVersion@0
#   inputs:
#     versionSpec: '3.11.8'
#     addToPath: true
#   displayName: 'Use Python 3.11.8'

# - script: |
#     python -m pip install --upgrade pip
#     pip install -r requirements.txt
#   displayName: 'Install dependencies'

# - script: |
#     pip install pytest pytest-azurepipelines
#     pytest
#   displayName: 'pytest'

# Second try
################################################################################
# trigger:
# - main

# pool:
#   vmImage: 'ubuntu-latest'
#   name: self-hosted

# steps:
# - script: |
#     python3 --version
#   displayName: 'Show Python version'

# - script: |
#     python3 -m pip install --upgrade pip
#     pip install -r requirements.txt
#   displayName: 'Install dependencies'

# - script: |
#     pytest
#   displayName: 'Run tests'

# - task: ArchiveFiles@2
#   inputs:
#     rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
#     includeRootFolder: false
#     archiveType: 'zip'
#     archiveFile: '$(build.artifactstagingdirectory)/task-api.zip'
#   displayName: 'Archive files'

# - task: PublishBuildArtifacts@1
#   inputs:
#     pathtoPublish: '$(build.artifactstagingdirectory)'
#     artifactName: 'task-api'
#     publishLocation: 'Container'

# Third try
#################################################################################
trigger:
- main

pool:
  vmImage: 'ubuntu-latest'
  name: self-hosted

stages:
- stage: Build
  jobs:
  - job: BuildJob
    steps:
    - script: |
        python3 --version
      displayName: 'Show Python version'

    - script: |
        python3 -m pip install --upgrade pip
        pip install -r requirements.txt
      displayName: 'Install dependencies'

    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(build.artifactstagingdirectory)/task-api.zip'
      displayName: 'Archive files'

    - task: PublishBuildArtifacts@1
      inputs:
        pathtoPublish: '$(build.artifactstagingdirectory)'
        artifactName: 'task-api'
        publishLocation: 'Container'

- stage: Test
  jobs:
  - job: TestJob
    steps:
    - script: |
        pytest
      displayName: 'Run tests'

# - stage: Deploy
#   jobs:
#   - deployment: DeployJob
#     dependsOn: Test
#     environment: '<Your-Environment-Name>'
#     strategy:
#       runOnce:
#         deploy:
#           steps:
#           - task: AzureWebApp@1
#             inputs:
#               azureSubscription: '<Your-Azure-Subscription>'
#               appName: '<Your-App-Service-Name>'
#               package: '$(Pipeline.Workspace)/drop/task-api.zip'
